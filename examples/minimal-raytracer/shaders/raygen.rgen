#version 460
#extension GL_KHR_vulkan_glsl : enable // Vulkan-specific syntax
#extension GL_GOOGLE_include_directive : enable // Include files
#extension GL_EXT_ray_tracing : enable // Raytracing

// Include structs and bindings

#include "../../../foray/src/shaders/rt_common/bindpoints.glsl"
#include "../../../foray/src/shaders/common/camera.glsl"
#include "../../../foray/src/shaders/rt_common/tlas.glsl"
#include "../../../foray/src/shaders/rt_common/imageoutput.glsl"

#define HITPAYLOAD_OUT
#include "./payload.glsl"

void main() 
{
	const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
	const vec2 inUV = pixelCenter/vec2(gl_LaunchSizeEXT.xy);
	vec2 d = inUV * 2.0 - 1.0;

	vec4 origin = Camera.InverseViewMatrix * vec4(0,0,0,1);
	vec4 target = Camera.InverseProjectionMatrix * vec4(d.x, d.y, 1, 1) ;
	vec4 direction = Camera.InverseViewMatrix*vec4(normalize(target.xyz), 0);

	float tmin = 0.001;
	float tmax = 10000.0;

    traceRayEXT(MainTlas, 0, 0xff, 0, 0, 0, origin.xyz, tmin, direction.xyz, tmax, 0);

	imageStore(ImageOutput, ivec2(gl_LaunchIDEXT.xy), vec4(ChildPayload.HitColor, 1.0));
}
